"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.HubsPage = exports.Hub = void 0;
var HalResource_1 = require("../hal/models/HalResource");
var ContentItem_1 = require("./ContentItem");
var ContentRepository_1 = require("./ContentRepository");
var ContentType_1 = require("./ContentType");
var ContentTypeSchema_1 = require("./ContentTypeSchema");
var Edition_1 = require("./Edition");
var Event_1 = require("./Event");
var Page_1 = require("./Page");
var SearchIndex_1 = require("./SearchIndex");
var Settings_1 = require("./Settings");
var Webhook_1 = require("./Webhook");
var WorkflowState_1 = require("./WorkflowState");
/**
 * Class representing the [Hub](https://amplience.com/docs/api/dynamic-content/management/#resources-hubs) resource.
 * Hubs are containers for multiple repositories including media, content, content types.
 */
var Hub = /** @class */ (function (_super) {
    __extends(Hub, _super);
    function Hub() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /**
         * Resources and actions related to a Hub
         */
        _this.related = {
            contentTypeSchema: {
                /**
                 * Creates a new Content Type Schema
                 * @param resource
                 */
                create: function (resource) {
                    return _this.createLinkedResource('create-content-type-schema', {}, resource, ContentTypeSchema_1.ContentTypeSchema);
                },
                /**
                 * Retrieves a list of Content Type Schemas associated with this Hub
                 * @param options Pagination options
                 */
                list: function (options) {
                    return _this.fetchLinkedResource('list-content-type-schemas', options, ContentTypeSchema_1.ContentTypeSchemaPage);
                },
            },
            contentRepositories: {
                /**
                 * Retrieves a list of Content Repositories associated with this Hub
                 * @param options Pagination options
                 */
                list: function (options) {
                    return _this.fetchLinkedResource('content-repositories', options, ContentRepository_1.ContentRepositoriesPage);
                },
                /**
                 * Find all the Content Repositories that contain a feature
                 * @param options Options
                 */
                findByFeature: function (feature, options) {
                    return _this.client.fetchLinkedResource({
                        href: "hubs/" + _this.id + "/content-repositories/search/findByFeaturesContaining?feature={feature}{&page,size,sort}",
                        templated: true,
                    }, __assign({ feature: feature }, options), ContentRepository_1.ContentRepositoriesPage);
                },
            },
            contentTypes: {
                /**
                 * Retrieves a list of Content Types associated with this Hub
                 * @param options Pagination options
                 */
                list: function (options) {
                    return _this.fetchLinkedResource('content-types', options, ContentType_1.ContentTypePage);
                },
                /**
                 * Register a Content Type on a hub so it can be enabled on a repository
                 */
                register: function (resource) {
                    return _this.createLinkedResource('register-content-type', {}, resource, ContentType_1.ContentType);
                },
                /**
                 * Get a content type by its id
                 */
                get: function (id) {
                    return _this.client.fetchResource("content-types/" + id, ContentType_1.ContentType);
                },
            },
            contentItems: {
                /**
                 * Facet content items and search by text. See [Text Search Query Syntax](https://amplience.com/docs/api/dynamic-content/management/#section/Text-Search-Query-Syntax) for a summary of the query syntax.
                 */
                facet: function (facetQuery, options) {
                    return _this.performActionThatReturnsResource('facet-content-items', options, facetQuery, ContentItem_1.ContentItemsFacets);
                },
            },
            editions: {
                /**
                 * Find editions by date associated with this Hub
                 * @param options FindByDate & Pageable & Sortable options
                 */
                findByDate: function (options, projection) {
                    return _this.fetchLinkedResource('search-editions', __assign({ projection: projection }, options), Edition_1.EditionsPage);
                },
            },
            events: {
                /**
                 * Creates an Event inside this Hub
                 * @param resource
                 */
                create: function (resource) {
                    return _this.createLinkedResource('create-event', {}, resource, Event_1.Event);
                },
                /**
                 * Retrieves a list of Events associated with this Hub
                 * @param options Pagination options
                 */
                list: function (options) {
                    return _this.fetchLinkedResource('events', options, Event_1.EventsPage);
                },
            },
            searchIndexes: {
                /**
                 * Create a search index for a given hub
                 * @param resource
                 */
                create: function (resource) {
                    return _this.createLinkedResource('create-algolia-search-index', {}, resource, SearchIndex_1.SearchIndex);
                },
                /**
                 * Get a search index by its id
                 */
                get: function (id) {
                    return _this.client.fetchResource("algolia-search/" + _this.id + "/indexes/" + id, SearchIndex_1.SearchIndex);
                },
                /**
                 * Retrieves a list of search indexes associated with this Hub
                 */
                list: function (parentId, projection, options) {
                    return _this.fetchLinkedResource('algolia-search-indexes', __assign({ parentId: parentId, projection: projection }, options), SearchIndex_1.SearchIndexesPage);
                },
            },
            settings: {
                /**
                 * Updates this hub settings with the changes in the mutation parameter.
                 */
                update: function (mutation) {
                    return _this.updateLinkedResource('update-settings', {
                        method: 'PATCH',
                    }, mutation, Settings_1.Settings);
                },
            },
            webhooks: {
                /**
                 * Creates a Webhook inside this Hub
                 * @param resource
                 */
                create: function (resource) {
                    return _this.createLinkedResource('create-webhook', {}, resource, Webhook_1.Webhook);
                },
                /**
                 * Get a Webhook inside this Hub by its id
                 */
                get: function (id) {
                    return _this.client.fetchResource("hubs/" + _this.id + "/webhooks/" + id, Webhook_1.Webhook);
                },
                /**
                 * Retrieves a list of Webhooks associated with this Hub
                 * @param options Pagination options
                 */
                list: function (options) {
                    return _this.fetchLinkedResource('webhooks', options, Webhook_1.WebhooksPage);
                },
            },
            workflowStates: {
                /**
                 * Creates a Workflow State inside this Hub
                 * @param resource
                 */
                create: function (resource) {
                    return _this.createLinkedResource('create-workflow-state', {}, resource, WorkflowState_1.WorkflowState);
                },
                /**
                 * Get a Webhook State insidee this Hub by its id
                 * @param id
                 */
                get: function (id) {
                    return _this.client.fetchResource("workflow-states/" + id, WorkflowState_1.WorkflowState);
                },
                /**
                 * Retrieves a list of Workflow States associated with this Hub
                 * @param options Pagination options
                 */
                list: function (options) {
                    return _this.fetchLinkedResource('workflow-states', options, WorkflowState_1.WorkflowStatesPage);
                },
            },
        };
        return _this;
    }
    return Hub;
}(HalResource_1.HalResource));
exports.Hub = Hub;
/**
 * @hidden
 */
var HubsPage = /** @class */ (function (_super) {
    __extends(HubsPage, _super);
    function HubsPage(data) {
        return _super.call(this, 'hubs', Hub, data) || this;
    }
    return HubsPage;
}(Page_1.Page));
exports.HubsPage = HubsPage;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSHViLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2xpYi9tb2RlbC9IdWIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEseURBQXdEO0FBQ3hELDZDQUF1RTtBQUN2RSx5REFHNkI7QUFDN0IsNkNBQTZEO0FBQzdELHlEQUErRTtBQUMvRSxxQ0FBa0Q7QUFDbEQsaUNBQTRDO0FBRzVDLCtCQUE4QjtBQUU5Qiw2Q0FBK0Q7QUFHL0QsdUNBQXNDO0FBQ3RDLHFDQUFrRDtBQUNsRCxpREFBb0U7QUFFcEU7OztHQUdHO0FBQ0g7SUFBeUIsdUJBQVc7SUFBcEM7UUFBQSxxRUFpU0M7UUE5T0M7O1dBRUc7UUFDYSxhQUFPLEdBQUc7WUFDeEIsaUJBQWlCLEVBQUU7Z0JBQ2pCOzs7bUJBR0c7Z0JBQ0gsTUFBTSxFQUFFLFVBQUMsUUFBMkI7b0JBQ2xDLE9BQUEsS0FBSSxDQUFDLG9CQUFvQixDQUN2Qiw0QkFBNEIsRUFDNUIsRUFBRSxFQUNGLFFBQVEsRUFDUixxQ0FBaUIsQ0FDbEI7Z0JBTEQsQ0FLQztnQkFFSDs7O21CQUdHO2dCQUNILElBQUksRUFBRSxVQUFDLE9BQWtCO29CQUN2QixPQUFBLEtBQUksQ0FBQyxtQkFBbUIsQ0FDdEIsMkJBQTJCLEVBQzNCLE9BQU8sRUFDUCx5Q0FBcUIsQ0FDdEI7Z0JBSkQsQ0FJQzthQUNKO1lBRUQsbUJBQW1CLEVBQUU7Z0JBQ25COzs7bUJBR0c7Z0JBQ0gsSUFBSSxFQUFFLFVBQUMsT0FBNkI7b0JBQ2xDLE9BQUEsS0FBSSxDQUFDLG1CQUFtQixDQUN0QixzQkFBc0IsRUFDdEIsT0FBTyxFQUNQLDJDQUF1QixDQUN4QjtnQkFKRCxDQUlDO2dCQUVIOzs7bUJBR0c7Z0JBQ0gsYUFBYSxFQUFFLFVBQ2IsT0FBZSxFQUNmLE9BQTZCO29CQUU3QixPQUFBLEtBQUksQ0FBQyxNQUFNLENBQUMsbUJBQW1CLENBQzdCO3dCQUNFLElBQUks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